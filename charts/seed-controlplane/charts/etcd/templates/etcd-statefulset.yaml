apiVersion: v1
kind: Service
metadata:
  name: etcd-{{ .Values.role }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: etcd-statefulset
    role: {{ .Values.role }}
spec:
  type: ClusterIP
  clusterIP: None
  sessionAffinity: None
  selector:
    app: etcd-statefulset
    role: {{ .Values.role }}
  ports:
  - name: discovery
    protocol: TCP
    port: 2380
    targetPort: 2380
---
apiVersion: v1
kind: Service
metadata:
  name: etcd-{{ .Values.role }}-client
  namespace: {{ .Release.Namespace }}
  labels:
    app: etcd-statefulset
    role: {{ .Values.role }}
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "2379"
    prometheus.io/name: kube-etcd3
spec:
  type: ClusterIP
  sessionAffinity: None
  selector:
    app: etcd-statefulset
    role: {{ .Values.role }}
  ports:
  - name: client
    protocol: TCP
    port: 2379
    targetPort: 2379
---
apiVersion: {{ include "statefulsetversion" . }}
kind: StatefulSet
metadata:
  name: etcd-{{ .Values.role }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: etcd-statefulset
    role: {{ .Values.role }}
spec:
  updateStrategy:
    type: RollingUpdate
  serviceName: etcd-{{.Values.role}}
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: etcd-statefulset
      role: {{ .Values.role }}
  template:
    metadata:
      labels:
        app: etcd-statefulset
        role: {{ .Values.role }}
    spec:
      containers:
      - name: etcd
        image: {{ index .Values.images "etcd" }}
        imagePullPolicy: IfNotPresent
        command:
        - /bin/sh
        - -ec
        - 'while true; do
wget http://localhost:8080/initialization/status -S -O status;
STATUS=`cat status`;
case $STATUS in
  "New")        wget http://localhost:8080/initialization/start -S -O - ;;
  "Progress")   sleep 1;
                continue;;
  "Failed")     continue;;
  "Successful") exec etcd --data-dir=/var/etcd/data
                --name=etcd-{{ .Values.role }}
                --advertise-client-urls=http://0.0.0.0:2379
                --listen-peer-urls=http://0.0.0.0:2380
                --listen-client-urls=http://0.0.0.0:2379
                --initial-advertise-peer-urls=http://0.0.0.0:2380
                --initial-cluster=etcd-{{ .Values.role }}=http://0.0.0.0:2380
                --initial-cluster-state=new
                --initial-cluster-token=new;;
esac;
done'
        livenessProbe:
          httpGet:
            path: /metrics
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 15
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -ec
            - ETCDCTL_API=3 etcdctl get foo
          initialDelaySeconds: 5
          periodSeconds: 5
        ports:
        - containerPort: 2380
          name: serverport
          protocol: TCP
        - containerPort: 2379
          name: clientport
          protocol: TCP
        resources:
          requests:
            cpu: 200m
        volumeMounts:
        - name: etcd-{{ .Values.role }}
          mountPath: /var/etcd
      - name: backup-restore
        command:
        - etcdbrctl
        - server
        - --schedule={{ .Values.backup.schedule }}
        - --max-backups={{ .Values.backup.maxBackups }}
        - --data-dir=/var/etcd/data
        - --storage-provider={{ .Values.backup.storageProvider }}  
        - --store-prefix=etcd-{{ .Values.role }}
        image: {{ index .Values.images "etcd-backup-restore" }} 
        livenessProbe:
          httpGet:  
            path: /metrics
            port: server
          initialDelaySeconds: 15
          periodSeconds: 15
        ports:
        - containerPort: 8080
          name: server
          protocol: TCP
        env:
        - name: STORAGE_CONTAINER
          value: {{ .Values.backup.storageContainer }}
{{- if .Values.backup.env }}
{{ toYaml .Values.backup.env | indent 8 }}
{{- end }}
        volumeMounts:
        - mountPath: /var/etcd
          name: etcd-{{ .Values.role }}
{{- if .Values.backup.volumeMounts }}
{{ toYaml .Values.backup.volumeMounts | indent 8 }}
{{- end }}
{{- if .Values.backup.storageProvider }}
      volumes:
        - name: {{ .Values.backup.backupSecret }}
          secret:
            secretName: {{ .Values.backup.backupSecret }}
            defaultMode: 0420
{{- end }}
  volumeClaimTemplates:
  - metadata:
      name: etcd-{{ .Values.role }}
    spec:
      accessModes:
      - "ReadWriteOnce"
      resources:
        requests:
          storage: 10Gi
