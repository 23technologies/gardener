kind: Deployment
apiVersion: {{ include "deploymentversion" . }}
metadata:
  name: csi-plugin-controller
  namespace: {{ .Release.Namespace }}
labels:
    garden.sapcloud.io/role: controlplane
    app: kubernetes
    role: csi-plugin-controller
spec:
  selector:
    matchLabels:
      app: kubernetes
      role: csi-plugin-controller
  template:
    metadata:
{{- if .Values.podAnnotations.csiPluginAlicloud }}
      annotations:
{{ toYaml .Values.podAnnotations.csiPluginAlicloud | indent 8 }}
{{- end }}     
      labels:
        garden.sapcloud.io/role: controlplane
        app: kubernetes
        role: csi-plugin-controller
    spec:
      containers:
        - name: csi-diskplugin
          image: {{ index .Values.images "csi-plugin-alicloud" }}
          args :
          - "--endpoint=tcp://0.0.0.0:80"
          - "--nodeid=dummy"
          - "--run-as-controller=true"
          - "--v=5"
          env:
            - name: REGION_ID
              value: {{ .Values.regionID }}
            - name: ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: cloudprovider
                  key: accessKeyID
            - name: ACCESS_KEY_SECRET
              valueFrom:
                secretKeyRef:
                  name: cloudprovider
                  key: accessKeySecret
          imagePullPolicy: Always
{{- if .Values.diskpluginResources }}
          resources:
{{ toYaml .Values.diskpluginResources | indent 12 }}         
{{- end }}
          ports:
          - containerPort: 80
          volumeMounts:
          - name: dummy
            # Plugin always check the existence of this path. Just make it available in container.
            mountPath: /var/lib/kubelet/plugins/diskplugin.csi.alibabacloud.com/controller
      volumes:
      - name: dummy
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: csi-plugin-controller
  namespace: {{ .Release.Namespace }}
spec:
  ports:
  - port: 80
  selector:
    app: kubernetes
    role: csi-plugin-controller